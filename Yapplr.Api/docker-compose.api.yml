version: '3.8'

# API-Only Docker Compose Configuration
# This file deploys only the backend API service
# Frontend deployment uses docker-compose.prod.yml

services:
  yapplr-api:
    image: yapplr-api:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=${DATABASE_CONNECTION_STRING}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=Yapplr.Api
      - JwtSettings__Audience=Yapplr.Client
      - JwtSettings__ExpirationInMinutes=60
      - AwsSesSettings__Region=${AWS_SES_REGION}
      - AwsSesSettings__FromEmail=${AWS_SES_FROM_EMAIL}
      - AwsSesSettings__FromName=Yapplr
      - AwsSesSettings__AccessKey=${AWS_SES_ACCESS_KEY}
      - AwsSesSettings__SecretKey=${AWS_SES_SECRET_KEY}
      - EmailProvider=AwsSes
      # Firebase configuration for backend notifications
      - Firebase__ProjectId=${FIREBASE_PROJECT_ID}
      - Firebase__ServiceAccountKey=${FIREBASE_SERVICE_ACCOUNT_KEY}
      # Notification provider configuration
      - NotificationProviders__Firebase__Enabled=true
      - NotificationProviders__SignalR__Enabled=true
    volumes:
      - yapplr_uploads:/app/uploads
      - /etc/letsencrypt:/etc/letsencrypt:ro
    restart: unless-stopped
    networks:
      - yapplr-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  yapplr_uploads:

networks:
  yapplr-network:
    driver: bridge
